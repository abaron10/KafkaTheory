version: '3.3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker-1:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker-1
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      # Environment variable is set to the hostname and port number of the Kafka broker.
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker-1:29092
      # Environment variable is set to a unique integer value for each Kafka broker in the cluster.
      KAFKA_BROKER_ID: 1
      # Environment variable is set to the hostname and port number of the zookeeper service.
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      # Environment variable that defines the mapping between listener names and security protocols in a Kafka cluster.
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      # Environment variable is set to 2, which ensures that the offsets topic is replicated across two brokers.
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  db:
    platform: linux/x86_64
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'reservation'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - my-db:/var/lib/mysql
  # Names our volume
volumes:
  my-db: